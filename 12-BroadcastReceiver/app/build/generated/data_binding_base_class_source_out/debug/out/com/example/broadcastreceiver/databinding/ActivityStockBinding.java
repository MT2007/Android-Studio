// Generated by view binder compiler. Do not edit!
package com.example.broadcastreceiver.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.example.broadcastreceiver.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityStockBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button sbt1;

  @NonNull
  public final CheckBox srbt1;

  @NonNull
  public final RecyclerView srv1;

  @NonNull
  public final EditText stf1;

  @NonNull
  public final EditText stf2;

  @NonNull
  public final EditText stf3;

  private ActivityStockBinding(@NonNull ConstraintLayout rootView, @NonNull Button sbt1,
      @NonNull CheckBox srbt1, @NonNull RecyclerView srv1, @NonNull EditText stf1,
      @NonNull EditText stf2, @NonNull EditText stf3) {
    this.rootView = rootView;
    this.sbt1 = sbt1;
    this.srbt1 = srbt1;
    this.srv1 = srv1;
    this.stf1 = stf1;
    this.stf2 = stf2;
    this.stf3 = stf3;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityStockBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityStockBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_stock, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityStockBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.sbt1;
      Button sbt1 = rootView.findViewById(id);
      if (sbt1 == null) {
        break missingId;
      }

      id = R.id.srbt1;
      CheckBox srbt1 = rootView.findViewById(id);
      if (srbt1 == null) {
        break missingId;
      }

      id = R.id.srv1;
      RecyclerView srv1 = rootView.findViewById(id);
      if (srv1 == null) {
        break missingId;
      }

      id = R.id.stf1;
      EditText stf1 = rootView.findViewById(id);
      if (stf1 == null) {
        break missingId;
      }

      id = R.id.stf2;
      EditText stf2 = rootView.findViewById(id);
      if (stf2 == null) {
        break missingId;
      }

      id = R.id.stf3;
      EditText stf3 = rootView.findViewById(id);
      if (stf3 == null) {
        break missingId;
      }

      return new ActivityStockBinding((ConstraintLayout) rootView, sbt1, srbt1, srv1, stf1, stf2,
          stf3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
